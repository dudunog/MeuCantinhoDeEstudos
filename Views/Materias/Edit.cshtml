@model MeuCantinhoDeEstudos3.Models.Materia

@{
    ViewBag.Title = "Editar";
}

<div class="page-header">
    <h2>Editar</h2>
    <h4>Materia</h4>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MateriaId)
        @Html.HiddenFor(model => model.DataCriacao)
        @Html.HiddenFor(model => model.UsuarioCriacao)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.CorIdentificacao, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CorIdentificacao, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CorIdentificacao, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group colorpicker-component">
            @Html.LabelFor(model => model.CorIdentificacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div id="cp2" class="input-group">
                    @Html.EditorFor(model => model.CorIdentificacao, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    <span class="input-group-addon"><i></i></span>
                </div>
                <span class="text-muted">Cliquei na caixa acima para escolhar a cor</span>

                @Html.ValidationMessageFor(model => model.CorIdentificacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataCriacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DataCriacao, new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UsuarioCriacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UsuarioCriacao, new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UltimaModificacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UltimaModificacao, new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $('#CorIdentificacao').colorpicker({
            hexNumberSignPrefix: false,
            format: 'hex',
            inline: false,
            container: true,
            format: 'hex',
        });

        $('#cp2').colorpicker();
    </script>
}
