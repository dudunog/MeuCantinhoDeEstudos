@model MeuCantinhoDeEstudos3.ViewModels.TemaViewModel

@{
    ViewBag.Title = "Editar";

    /* O procesamento abaixo recupera a query string para poder voltar à página anterior
    quando o usuário clicar na âncora 'Voltar' */

    //Buscar a query string da rota anterior e coloca em um NameValueCollection
    var queryStringValues = HttpUtility.ParseQueryString(@Request.UrlReferrer.Query);

    //Cria um dicionário
    IDictionary<string, object> routeValues = new Dictionary<string, object>();

    //Adiciona cada Name e Value da query string ao dicionário
    foreach (var queryString in queryStringValues.AllKeys)
    {
        routeValues.Add(queryString, queryStringValues[queryString.ToString()]);
    }
}

<div class="page-header">
    <h2>Editar</h2>
    <h4>Tema</h4>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TemaId)
    @Html.HiddenFor(model => model.DataCriacao)
    @Html.HiddenFor(model => model.UsuarioCriacao)

    <div class="form-group">
        @Html.LabelFor(model => model.MateriaId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MateriaId, Model.Materias, "Selecione", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MateriaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataCriacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.DataCriacao, new { @class = "form-control", disabled = "disabled" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UsuarioCriacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.UsuarioCriacao, new { @class = "form-control", disabled = "disabled" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UltimaModificacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.UltimaModificacao, new { @class = "form-control", disabled = "disabled" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Salvar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar", "Index", new RouteValueDictionary(routeValues))
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
